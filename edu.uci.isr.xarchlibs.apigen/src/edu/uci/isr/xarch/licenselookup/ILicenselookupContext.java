/*
 * Copyright (c) 2000-2005 Regents of the University of California.
 * All rights reserved.
 *
 * This software was developed at the University of California, Irvine.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the University of California, Irvine.  The name of the
 * University may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */
package edu.uci.isr.xarch.licenselookup;

import java.util.*;

import edu.uci.isr.xarch.*;

import org.w3c.dom.*;

import edu.uci.isr.xarch.IXArch;
import edu.uci.isr.xarch.IXArchContext;

/**
 * The context interface for the licenselookup package.
 * This interface is used to create objects that are used
 * in the licenselookup namespace.
 *
 * @author Automatically Generated by xArch apigen
 */
public interface ILicenselookupContext extends IXArchContext{

	/**
	 * Create an IActorSimple object in this namespace.
	 * @return New IActorSimple object.
	 */
	public IActorSimple createActorSimple();

	/**
	 * Brings an IActorSimple object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IActorSimple recontextualizeActorSimple(IActorSimple value);

	/**
	 * Create an IOperationSimple object in this namespace.
	 * @return New IOperationSimple object.
	 */
	public IOperationSimple createOperationSimple();

	/**
	 * Brings an IOperationSimple object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IOperationSimple recontextualizeOperationSimple(IOperationSimple value);

	/**
	 * Create an IActionSimple object in this namespace.
	 * @return New IActionSimple object.
	 */
	public IActionSimple createActionSimple();

	/**
	 * Brings an IActionSimple object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IActionSimple recontextualizeActionSimple(IActionSimple value);

	/**
	 * Create an IObjectSimple object in this namespace.
	 * @return New IObjectSimple object.
	 */
	public IObjectSimple createObjectSimple();

	/**
	 * Brings an IObjectSimple object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IObjectSimple recontextualizeObjectSimple(IObjectSimple value);

	/**
	 * Create an ILicenseLookup object in this namespace.
	 * @return New ILicenseLookup object.
	 */
	public ILicenseLookup createLicenseLookup();

	/**
	 * Brings an ILicenseLookup object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public ILicenseLookup recontextualizeLicenseLookup(ILicenseLookup value);

	/**
	 * Create an ILicenseType object in this namespace.
	 * @return New ILicenseType object.
	 */
	public ILicenseType createLicenseType();

	/**
	 * Brings an ILicenseType object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public ILicenseType recontextualizeLicenseType(ILicenseType value);

	/**
	 * Create an edu.uci.isr.xarch.instance.IDescription object in this namespace.
	 * @return New edu.uci.isr.xarch.instance.IDescription object.
	 */
	public edu.uci.isr.xarch.instance.IDescription createDescription();

	/**
	 * Brings an edu.uci.isr.xarch.instance.IDescription object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public edu.uci.isr.xarch.instance.IDescription recontextualizeDescription(edu.uci.isr.xarch.instance.IDescription value);

	/**
	 * Create an edu.uci.isr.xarch.instance.IXMLLink object in this namespace.
	 * @return New edu.uci.isr.xarch.instance.IXMLLink object.
	 */
	public edu.uci.isr.xarch.instance.IXMLLink createXMLLink();

	/**
	 * Brings an edu.uci.isr.xarch.instance.IXMLLink object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public edu.uci.isr.xarch.instance.IXMLLink recontextualizeXMLLink(edu.uci.isr.xarch.instance.IXMLLink value);

	/**
	 * Create an IObligation object in this namespace.
	 * @return New IObligation object.
	 */
	public IObligation createObligation();

	/**
	 * Brings an IObligation object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IObligation recontextualizeObligation(IObligation value);

	/**
	 * Create an IRight object in this namespace.
	 * @return New IRight object.
	 */
	public IRight createRight();

	/**
	 * Brings an IRight object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IRight recontextualizeRight(IRight value);

	/**
	 * Create an IActor object in this namespace.
	 * @return New IActor object.
	 */
	public IActor createActor();

	/**
	 * Brings an IActor object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IActor recontextualizeActor(IActor value);

	/**
	 * Create an IOperation object in this namespace.
	 * @return New IOperation object.
	 */
	public IOperation createOperation();

	/**
	 * Brings an IOperation object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IOperation recontextualizeOperation(IOperation value);

	/**
	 * Create an IAction object in this namespace.
	 * @return New IAction object.
	 */
	public IAction createAction();

	/**
	 * Brings an IAction object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IAction recontextualizeAction(IAction value);

	/**
	 * Create an IObject object in this namespace.
	 * @return New IObject object.
	 */
	public IObject createObject();

	/**
	 * Brings an IObject object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public IObject recontextualizeObject(IObject value);

	/**
	 * Create an ISatisfy object in this namespace.
	 * @return New ISatisfy object.
	 */
	public ISatisfy createSatisfy();

	/**
	 * Brings an ISatisfy object created in another
	 * context into this context.
	 * @param value Object to recontextualize.
	 * @return <code>value</code> object in this namespace.
	 */
	public ISatisfy recontextualizeSatisfy(ISatisfy value);

	/**
	 * Create a top-level element of type <code>ILicenseLookup</code>.
	 * This function should be used in lieu of <code>createLicenseLookup</code>
	 * if the element is to be added as a sub-object of <code>IXArch</code>.
	 * @return new ILicenseLookup suitable for adding
	 * as a child of xArch.
	 */
	public ILicenseLookup createLicenseLookupElement();

	/**
	 * Gets the ILicenseLookup child from the given <code>IXArch</code>
	 * element.  If there are multiple matching children, this returns the first one.
	 * @param xArch <code>IXArch</code> object from which to get the child.
	 * @return <code>ILicenseLookup</code> that is the child
	 * of <code>xArch</code> or <code>null</code> if no such object exists.
	 */
	public ILicenseLookup getLicenseLookup(IXArch xArch);

	/**
	 * Gets all the ILicenseLookup children from the given 
	 * <code>IXArch</code> element.
	 * @param xArch <code>IXArch</code> object from which to get the children.
	 * @return Collection of <code>ILicenseLookup</code> that are 	
	 * the children of <code>xArch</code> or an empty collection if no such object exists.
	 */
	public Collection getAllLicenseLookups(IXArch xArch);


	public final static XArchTypeMetadata TYPE_METADATA = new XArchTypeMetadata(
		XArchTypeMetadata.XARCH_CONTEXT,
		"licenselookup", null, null,
		new XArchPropertyMetadata[]{},
		new XArchActionMetadata[]{
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IActorSimple.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IActorSimple.TYPE_METADATA, IActorSimple.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IOperationSimple.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IOperationSimple.TYPE_METADATA, IOperationSimple.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IActionSimple.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IActionSimple.TYPE_METADATA, IActionSimple.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IObjectSimple.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IObjectSimple.TYPE_METADATA, IObjectSimple.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, ILicenseLookup.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, ILicenseLookup.TYPE_METADATA, ILicenseLookup.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, ILicenseType.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, ILicenseType.TYPE_METADATA, ILicenseType.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, edu.uci.isr.xarch.instance.IDescription.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, edu.uci.isr.xarch.instance.IDescription.TYPE_METADATA, edu.uci.isr.xarch.instance.IDescription.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, edu.uci.isr.xarch.instance.IXMLLink.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, edu.uci.isr.xarch.instance.IXMLLink.TYPE_METADATA, edu.uci.isr.xarch.instance.IXMLLink.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IObligation.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IObligation.TYPE_METADATA, IObligation.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IRight.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IRight.TYPE_METADATA, IRight.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IActor.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IActor.TYPE_METADATA, IActor.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IOperation.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IOperation.TYPE_METADATA, IOperation.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IAction.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IAction.TYPE_METADATA, IAction.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, IObject.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, IObject.TYPE_METADATA, IObject.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE, null, ISatisfy.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.RECONTEXTUALIZE, ISatisfy.TYPE_METADATA, ISatisfy.TYPE_METADATA),
			new XArchActionMetadata(XArchActionMetadata.CREATE_ELEMENT, null, ILicenseLookup.TYPE_METADATA)});

}

